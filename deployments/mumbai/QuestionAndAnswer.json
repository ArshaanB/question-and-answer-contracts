{
  "address": "0x141ae992ca9b3c2cc9e5490ef149010ddf3598dc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "USDCAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "QuestionAndAnswer__AllowanceTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuestionAndAnswer__BountyTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuestionAndAnswer__InvalidPriceMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuestionAndAnswer__NothingToWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuestionAndAnswer__QuestionAlreadyAnswered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuestionAndAnswer__QuestionDoesNotExist",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "questioner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "answerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "answer",
          "type": "string"
        }
      ],
      "name": "QuestionAnswered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "questioner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "answerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "question",
          "type": "string"
        }
      ],
      "name": "QuestionAsked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "questioner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "answerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "QuestionCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "questioner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "answerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "QuestionExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawalBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "questioner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "questionId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "answer",
          "type": "string"
        }
      ],
      "name": "answerQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "answererToSettings",
      "outputs": [
        {
          "internalType": "bool",
          "name": "populated",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "priceMinimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawableAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "interests",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "answererWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "answerer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        }
      ],
      "name": "askQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "questioner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "answerer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getQuestionerToAnswererToQAs",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "priceMinimum",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "interests",
          "type": "string"
        }
      ],
      "name": "setAnswererSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc8a690cfecee5c8ed05d7194ed64338307b5fce1e1ac9c6cd21ab90150b6e908",
  "receipt": {
    "from": "0x27f940eb8fa6740e38a20214592cece329bde8df",
    "contractAddress": "0x141ae992ca9b3c2cc9e5490ef149010ddf3598dc",
    "transactionIndex": "0x18",
    "gasUsed": "0x1825ae",
    "logsBloom": "0x
    "blockHash": "0x591e8bca7c6b6edad13e669c05a05e032297d3181374a65d66bbfe3a91aa5330",
    "transactionHash": "0xc8a690cfecee5c8ed05d7194ed64338307b5fce1e1ac9c6cd21ab90150b6e908",
    "logs": [
      {
        "transactionHash": "0xc8a690cfecee5c8ed05d7194ed64338307b5fce1e1ac9c6cd21ab90150b6e908",
        "address": "0x0000000000000000000000000000000000001010",
        "blockHash": "0x591e8bca7c6b6edad13e669c05a05e032297d3181374a65d66bbfe3a91aa5330",
        "blockNumber": "0x1b1d1a6",
        "data": "0x00000000000000000000000000000000000000000000000000131d91308bb22a00000000000000000000000000000000000000000000000022332a1ed9d51bd90000000000000000000000000000000000000000000009900bef17caf4844d7800000000000000000000000000000000000000000000000022200c8da94969af0000000000000000000000000000000000000000000009900c02355c250fffa2",
        "logIndex": "0xa3",
        "removed": false,
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000027f940eb8fa6740e38a20214592cece329bde8df",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "transactionIndex": "0x18"
      }
    ],
    "blockNumber": "0x1b1d1a6",
    "cumulativeGasUsed": "0x5e55e6",
    "status": "0x1"
  },
  "args": [
    "0xd77cffca19aec21aca9f0e38743740efd548b2a4"
  ],
  "numDeployments": 7,
  "solcInputHash": "ca929849d11bafc5cc55e9c9de57026f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"USDCAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"QuestionAndAnswer__AllowanceTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuestionAndAnswer__BountyTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuestionAndAnswer__InvalidPriceMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuestionAndAnswer__NothingToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuestionAndAnswer__QuestionAlreadyAnswered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuestionAndAnswer__QuestionDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"questioner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"answer\",\"type\":\"string\"}],\"name\":\"QuestionAnswered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"questioner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"}],\"name\":\"QuestionAsked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"questioner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"QuestionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"questioner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"QuestionExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawalBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"questioner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"questionId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"answer\",\"type\":\"string\"}],\"name\":\"answerQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"answererToSettings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"populated\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"priceMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"interests\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"answererWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"}],\"name\":\"askQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"questioner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"answerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getQuestionerToAnswererToQAs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceMinimum\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"interests\",\"type\":\"string\"}],\"name\":\"setAnswererSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/QuestionAndAnswer.sol\":\"QuestionAndAnswer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/QuestionAndAnswer.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n// TODO: error QuestionAndAnswer__QuestionTooLong();\\nerror QuestionAndAnswer__BountyTooLow();\\nerror QuestionAndAnswer__InvalidPriceMinimum();\\nerror QuestionAndAnswer__AllowanceTooLow();\\nerror QuestionAndAnswer__QuestionDoesNotExist();\\nerror QuestionAndAnswer__QuestionAlreadyAnswered();\\nerror QuestionAndAnswer__NothingToWithdraw();\\n\\ncontract QuestionAndAnswer {\\n    event QuestionAsked(\\n        address indexed questioner,\\n        address indexed answerer,\\n        uint256 indexed questionId,\\n        uint256 bounty,\\n        uint256 date,\\n        string question\\n    );\\n    event QuestionAnswered(\\n        address indexed questioner,\\n        address indexed answerer,\\n        uint256 indexed questionId,\\n        uint256 bounty,\\n        uint256 date,\\n        string answer\\n    );\\n    event QuestionCanceled(\\n        address indexed questioner,\\n        address indexed answerer,\\n        uint256 indexed questionId,\\n        uint256 date\\n    );\\n    event QuestionExpired(\\n        address indexed questioner,\\n        address indexed answerer,\\n        uint256 indexed questionId,\\n        uint256 date\\n    );\\n    event Withdraw(address indexed withdrawalBy, uint256 indexed amount);\\n\\n    // For now, this is the only accepted currency.\\n    address immutable i_USDC_ADDRESS;\\n\\n    struct AnswererSettings {\\n        bool populated;\\n        uint256 priceMinimum;\\n        uint256 withdrawableAmount;\\n        string interests;\\n    }\\n    struct QuestionAnswerDetails {\\n        string question;\\n        string answer;\\n        bool answered;\\n        uint256 bounty;\\n        uint256 id;\\n    }\\n    mapping(address => AnswererSettings) public answererToSettings;\\n    mapping(address => mapping(address => QuestionAnswerDetails[]))\\n        private questionerToAnswererToQAs;\\n\\n    constructor(address USDCAddress) {\\n        i_USDC_ADDRESS = USDCAddress;\\n    }\\n\\n    function setAnswererSettings(\\n        uint256 priceMinimum,\\n        string calldata interests\\n    ) public {\\n        if (priceMinimum <= 0) {\\n            revert QuestionAndAnswer__InvalidPriceMinimum();\\n        }\\n\\n        answererToSettings[msg.sender].populated = true;\\n        answererToSettings[msg.sender].priceMinimum = priceMinimum;\\n        answererToSettings[msg.sender].interests = interests;\\n    }\\n\\n    function askQuestion(\\n        string calldata question,\\n        address answerer,\\n        uint256 bounty\\n    ) public {\\n        AnswererSettings memory answererSettings = answererToSettings[answerer];\\n\\n        if (\\n            answererSettings.populated && bounty < answererSettings.priceMinimum\\n        ) {\\n            revert QuestionAndAnswer__BountyTooLow();\\n        }\\n\\n        IERC20 paymentTokenERC20 = IERC20(i_USDC_ADDRESS);\\n        if (paymentTokenERC20.allowance(msg.sender, address(this)) < bounty) {\\n            revert QuestionAndAnswer__AllowanceTooLow();\\n        }\\n\\n        QuestionAnswerDetails[]\\n            memory questionAnswerDetails = questionerToAnswererToQAs[\\n                msg.sender\\n            ][answerer];\\n        QuestionAnswerDetails\\n            memory newQuestionAnswerDetails = QuestionAnswerDetails({\\n                question: question,\\n                answer: \\\"\\\",\\n                answered: false,\\n                bounty: bounty,\\n                id: 0\\n            });\\n        if (questionAnswerDetails.length != 0) {\\n            newQuestionAnswerDetails.id =\\n                questionAnswerDetails[questionAnswerDetails.length - 1].id +\\n                1;\\n        }\\n        questionerToAnswererToQAs[msg.sender][answerer].push(\\n            newQuestionAnswerDetails\\n        );\\n\\n        emit QuestionAsked(\\n            msg.sender,\\n            answerer,\\n            newQuestionAnswerDetails.id,\\n            bounty,\\n            block.timestamp,\\n            question\\n        );\\n    }\\n\\n    function answerQuestion(\\n        address questioner,\\n        uint256 questionId,\\n        string calldata answer\\n    ) public {\\n        QuestionAnswerDetails[]\\n            storage allQuestionAnswerDetails = questionerToAnswererToQAs[\\n                questioner\\n            ][msg.sender];\\n        if (allQuestionAnswerDetails.length <= questionId) {\\n            revert QuestionAndAnswer__QuestionDoesNotExist();\\n        }\\n        if (allQuestionAnswerDetails[questionId].answered) {\\n            revert QuestionAndAnswer__QuestionAlreadyAnswered();\\n        }\\n        allQuestionAnswerDetails[questionId].answer = answer;\\n        allQuestionAnswerDetails[questionId].answered = true;\\n        uint256 bountyToCollect = allQuestionAnswerDetails[questionId].bounty;\\n\\n        emit QuestionAnswered(\\n            questioner,\\n            msg.sender,\\n            questionId,\\n            bountyToCollect,\\n            block.timestamp,\\n            answer\\n        );\\n\\n        IERC20 paymentTokenERC20 = IERC20(i_USDC_ADDRESS);\\n        paymentTokenERC20.transferFrom(\\n            questioner,\\n            address(this),\\n            bountyToCollect\\n        );\\n\\n        answererToSettings[msg.sender].withdrawableAmount += bountyToCollect;\\n    }\\n\\n    function answererWithdraw() public {\\n        AnswererSettings storage answererSettings = answererToSettings[\\n            msg.sender\\n        ];\\n        if (answererSettings.withdrawableAmount <= 0) {\\n            revert QuestionAndAnswer__NothingToWithdraw();\\n        }\\n\\n        uint256 withdrawableAmount = answererSettings.withdrawableAmount;\\n        IERC20 paymentTokenERC20 = IERC20(i_USDC_ADDRESS);\\n        paymentTokenERC20.transfer(msg.sender, withdrawableAmount);\\n\\n        answererSettings.withdrawableAmount = 0;\\n\\n        emit Withdraw(msg.sender, withdrawableAmount);\\n    }\\n\\n    function getQuestionerToAnswererToQAs(\\n        address questioner,\\n        address answerer,\\n        uint256 index\\n    )\\n        public\\n        view\\n        returns (\\n            string memory,\\n            string memory,\\n            bool,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        return (\\n            questionerToAnswererToQAs[questioner][answerer][index].question,\\n            questionerToAnswererToQAs[questioner][answerer][index].answer,\\n            questionerToAnswererToQAs[questioner][answerer][index].answered,\\n            questionerToAnswererToQAs[questioner][answerer][index].bounty,\\n            questionerToAnswererToQAs[questioner][answerer][index].id\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x3fff8144343105ebb4d6f118e8a1958f64cbe9ad922d2c85edf785efd52e2f76\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001ce338038062001ce38339818101604052810190620000379190620000dc565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b620000b68162000097565b8114620000c257600080fd5b50565b600081519050620000d681620000ab565b92915050565b600060208284031215620000f557620000f462000072565b5b60006200010584828501620000c5565b91505092915050565b608051611bab62000138600039600081816101b9015281816104ea015261094e0152611bab6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063018070f8146100675780637b74b8331461007157806380751c1d1461008d578063e2913c6b146100a9578063ee3619a6146100dc578063fc5c8298146100f8575b600080fd5b61006f61012c565b005b61008b60048036038101906100869190611545565b6102bb565b005b6100a760048036038101906100a291906115b9565b6105fc565b005b6100c360048036038101906100be9190611619565b61072c565b6040516100d39493929190611709565b60405180910390f35b6100f660048036038101906100f19190611755565b6107f1565b005b610112600480360381019061010d91906117c9565b610eb9565b60405161012395949392919061181c565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160020154116101ac576040517f803b3bd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160020154905060007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161021592919061188c565b602060405180830381600087803b15801561022f57600080fd5b505af1158015610243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026791906118e1565b5060008360020181905550813373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a3505050565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905083818054905011610377576040517e4095f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80848154811061038a5761038961190e565b5b906000526020600020906005020160020160009054906101000a900460ff16156103e0576040517f894c1a4700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82828286815481106103f5576103f461190e565b5b90600052602060002090600502016001019190610413929190611319565b5060018185815481106104295761042861190e565b5b906000526020600020906005020160020160006101000a81548160ff02191690831515021790555060008185815481106104665761046561190e565b5b9060005260206000209060050201600301549050843373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f6bd44ed2453a257d2a02f8437dd1009cb4790852a0581d9d2214324c0feb30bf844289896040516104de9493929190611979565b60405180910390a460007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8830856040518463ffffffff1660e01b8152600401610548939291906119b9565b602060405180830381600087803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a91906118e1565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546105ec9190611a1f565b9250508190555050505050505050565b60008311610636576040517ffcc286a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555081816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019190610726929190611319565b50505050565b60006020528060005260406000206000915090508060000160009054906101000a900460ff169080600101549080600201549080600301805461076e90611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461079a90611aa4565b80156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b5050505050905084565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201805461087b90611aa4565b80601f01602080910402602001604051908101604052809291908181526020018280546108a790611aa4565b80156108f45780601f106108c9576101008083540402835291602001916108f4565b820191906000526020600020905b8154815290600101906020018083116108d757829003601f168201915b5050505050815250509050806000015180156109135750806020015182105b1561094a576040517f97c28dc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109ab929190611ad6565b60206040518083038186803b1580156109c357600080fd5b505afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb9190611b14565b1015610a33576040517fcefbc98e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c5657838290600052602060002090600502016040518060a0016040529081600082018054610b0490611aa4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3090611aa4565b8015610b7d5780601f10610b5257610100808354040283529160200191610b7d565b820191906000526020600020905b815481529060010190602001808311610b6057829003601f168201915b50505050508152602001600182018054610b9690611aa4565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc290611aa4565b8015610c0f5780601f10610be457610100808354040283529160200191610c0f565b820191906000526020600020905b815481529060010190602001808311610bf257829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016003820154815260200160048201548152505081526020019060010190610ad1565b50505050905060006040518060a0016040528089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001604051806020016040528060008152508152602001600015158152602001868152602001600081525090506000825114610d295760018260018451610cf89190611b41565b81518110610d0957610d0861190e565b5b602002602001015160800151610d1f9190611a1f565b8160800181815250505b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190610deb92919061139f565b506020820151816001019080519060200190610e0892919061139f565b5060408201518160020160006101000a81548160ff0219169083151502179055506060820151816003015560808201518160040155505080608001518673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa566fb299bfa5cfd2a6124aa0dd36dfb2ff2fb4c63dd05d5d53c3be062882db288428d8d604051610ea79493929190611979565b60405180910390a45050505050505050565b6060806000806000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110610f4f57610f4e61190e565b5b9060005260206000209060050201600001600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208781548110610fee57610fed61190e565b5b9060005260206000209060050201600101600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020888154811061108d5761108c61190e565b5b906000526020600020906005020160020160009054906101000a900460ff16600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020898154811061113a5761113961190e565b5b906000526020600020906005020160030154600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208a815481106111da576111d961190e565b5b9060005260206000209060050201600401548480546111f890611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461122490611aa4565b80156112715780601f1061124657610100808354040283529160200191611271565b820191906000526020600020905b81548152906001019060200180831161125457829003601f168201915b5050505050945083805461128490611aa4565b80601f01602080910402602001604051908101604052809291908181526020018280546112b090611aa4565b80156112fd5780601f106112d2576101008083540402835291602001916112fd565b820191906000526020600020905b8154815290600101906020018083116112e057829003601f168201915b5050505050935094509450945094509450939792965093509350565b82805461132590611aa4565b90600052602060002090601f016020900481019282611347576000855561138e565b82601f1061136057803560ff191683800117855561138e565b8280016001018555821561138e579182015b8281111561138d578235825591602001919060010190611372565b5b50905061139b9190611425565b5090565b8280546113ab90611aa4565b90600052602060002090601f0160209004810192826113cd5760008555611414565b82601f106113e657805160ff1916838001178555611414565b82800160010185558215611414579182015b828111156114135782518255916020019190600101906113f8565b5b5090506114219190611425565b5090565b5b8082111561143e576000816000905550600101611426565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114778261144c565b9050919050565b6114878161146c565b811461149257600080fd5b50565b6000813590506114a48161147e565b92915050565b6000819050919050565b6114bd816114aa565b81146114c857600080fd5b50565b6000813590506114da816114b4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611505576115046114e0565b5b8235905067ffffffffffffffff811115611522576115216114e5565b5b60208301915083600182028301111561153e5761153d6114ea565b5b9250929050565b6000806000806060858703121561155f5761155e611442565b5b600061156d87828801611495565b945050602061157e878288016114cb565b935050604085013567ffffffffffffffff81111561159f5761159e611447565b5b6115ab878288016114ef565b925092505092959194509250565b6000806000604084860312156115d2576115d1611442565b5b60006115e0868287016114cb565b935050602084013567ffffffffffffffff81111561160157611600611447565b5b61160d868287016114ef565b92509250509250925092565b60006020828403121561162f5761162e611442565b5b600061163d84828501611495565b91505092915050565b60008115159050919050565b61165b81611646565b82525050565b61166a816114aa565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116aa57808201518184015260208101905061168f565b838111156116b9576000848401525b50505050565b6000601f19601f8301169050919050565b60006116db82611670565b6116e5818561167b565b93506116f581856020860161168c565b6116fe816116bf565b840191505092915050565b600060808201905061171e6000830187611652565b61172b6020830186611661565b6117386040830185611661565b818103606083015261174a81846116d0565b905095945050505050565b6000806000806060858703121561176f5761176e611442565b5b600085013567ffffffffffffffff81111561178d5761178c611447565b5b611799878288016114ef565b945094505060206117ac87828801611495565b92505060406117bd878288016114cb565b91505092959194509250565b6000806000606084860312156117e2576117e1611442565b5b60006117f086828701611495565b935050602061180186828701611495565b9250506040611812868287016114cb565b9150509250925092565b600060a082019050818103600083015261183681886116d0565b9050818103602083015261184a81876116d0565b90506118596040830186611652565b6118666060830185611661565b6118736080830184611661565b9695505050505050565b6118868161146c565b82525050565b60006040820190506118a1600083018561187d565b6118ae6020830184611661565b9392505050565b6118be81611646565b81146118c957600080fd5b50565b6000815190506118db816118b5565b92915050565b6000602082840312156118f7576118f6611442565b5b6000611905848285016118cc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b82818337600083830152505050565b6000611958838561167b565b935061196583858461193d565b61196e836116bf565b840190509392505050565b600060608201905061198e6000830187611661565b61199b6020830186611661565b81810360408301526119ae81848661194c565b905095945050505050565b60006060820190506119ce600083018661187d565b6119db602083018561187d565b6119e86040830184611661565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a2a826114aa565b9150611a35836114aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a6a57611a696119f0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611abc57607f821691505b60208210811415611ad057611acf611a75565b5b50919050565b6000604082019050611aeb600083018561187d565b611af8602083018461187d565b9392505050565b600081519050611b0e816114b4565b92915050565b600060208284031215611b2a57611b29611442565b5b6000611b3884828501611aff565b91505092915050565b6000611b4c826114aa565b9150611b57836114aa565b925082821015611b6a57611b696119f0565b5b82820390509291505056fea2646970667358221220beba888e61e47fe222db6cda263e7e7b90730479c500f38715328600c848a6d164736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063018070f8146100675780637b74b8331461007157806380751c1d1461008d578063e2913c6b146100a9578063ee3619a6146100dc578063fc5c8298146100f8575b600080fd5b61006f61012c565b005b61008b60048036038101906100869190611545565b6102bb565b005b6100a760048036038101906100a291906115b9565b6105fc565b005b6100c360048036038101906100be9190611619565b61072c565b6040516100d39493929190611709565b60405180910390f35b6100f660048036038101906100f19190611755565b6107f1565b005b610112600480360381019061010d91906117c9565b610eb9565b60405161012395949392919061181c565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160020154116101ac576040517f803b3bd600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160020154905060007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161021592919061188c565b602060405180830381600087803b15801561022f57600080fd5b505af1158015610243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026791906118e1565b5060008360020181905550813373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a3505050565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905083818054905011610377576040517e4095f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80848154811061038a5761038961190e565b5b906000526020600020906005020160020160009054906101000a900460ff16156103e0576040517f894c1a4700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82828286815481106103f5576103f461190e565b5b90600052602060002090600502016001019190610413929190611319565b5060018185815481106104295761042861190e565b5b906000526020600020906005020160020160006101000a81548160ff02191690831515021790555060008185815481106104665761046561190e565b5b9060005260206000209060050201600301549050843373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f6bd44ed2453a257d2a02f8437dd1009cb4790852a0581d9d2214324c0feb30bf844289896040516104de9493929190611979565b60405180910390a460007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8830856040518463ffffffff1660e01b8152600401610548939291906119b9565b602060405180830381600087803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a91906118e1565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546105ec9190611a1f565b9250508190555050505050505050565b60008311610636576040517ffcc286a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555081816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003019190610726929190611319565b50505050565b60006020528060005260406000206000915090508060000160009054906101000a900460ff169080600101549080600201549080600301805461076e90611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461079a90611aa4565b80156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b5050505050905084565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201805461087b90611aa4565b80601f01602080910402602001604051908101604052809291908181526020018280546108a790611aa4565b80156108f45780601f106108c9576101008083540402835291602001916108f4565b820191906000526020600020905b8154815290600101906020018083116108d757829003601f168201915b5050505050815250509050806000015180156109135750806020015182105b1561094a576040517f97c28dc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109ab929190611ad6565b60206040518083038186803b1580156109c357600080fd5b505afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb9190611b14565b1015610a33576040517fcefbc98e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c5657838290600052602060002090600502016040518060a0016040529081600082018054610b0490611aa4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3090611aa4565b8015610b7d5780601f10610b5257610100808354040283529160200191610b7d565b820191906000526020600020905b815481529060010190602001808311610b6057829003601f168201915b50505050508152602001600182018054610b9690611aa4565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc290611aa4565b8015610c0f5780601f10610be457610100808354040283529160200191610c0f565b820191906000526020600020905b815481529060010190602001808311610bf257829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016003820154815260200160048201548152505081526020019060010190610ad1565b50505050905060006040518060a0016040528089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001604051806020016040528060008152508152602001600015158152602001868152602001600081525090506000825114610d295760018260018451610cf89190611b41565b81518110610d0957610d0861190e565b5b602002602001015160800151610d1f9190611a1f565b8160800181815250505b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190610deb92919061139f565b506020820151816001019080519060200190610e0892919061139f565b5060408201518160020160006101000a81548160ff0219169083151502179055506060820151816003015560808201518160040155505080608001518673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa566fb299bfa5cfd2a6124aa0dd36dfb2ff2fb4c63dd05d5d53c3be062882db288428d8d604051610ea79493929190611979565b60405180910390a45050505050505050565b6060806000806000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110610f4f57610f4e61190e565b5b9060005260206000209060050201600001600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208781548110610fee57610fed61190e565b5b9060005260206000209060050201600101600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020888154811061108d5761108c61190e565b5b906000526020600020906005020160020160009054906101000a900460ff16600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020898154811061113a5761113961190e565b5b906000526020600020906005020160030154600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208a815481106111da576111d961190e565b5b9060005260206000209060050201600401548480546111f890611aa4565b80601f016020809104026020016040519081016040528092919081815260200182805461122490611aa4565b80156112715780601f1061124657610100808354040283529160200191611271565b820191906000526020600020905b81548152906001019060200180831161125457829003601f168201915b5050505050945083805461128490611aa4565b80601f01602080910402602001604051908101604052809291908181526020018280546112b090611aa4565b80156112fd5780601f106112d2576101008083540402835291602001916112fd565b820191906000526020600020905b8154815290600101906020018083116112e057829003601f168201915b5050505050935094509450945094509450939792965093509350565b82805461132590611aa4565b90600052602060002090601f016020900481019282611347576000855561138e565b82601f1061136057803560ff191683800117855561138e565b8280016001018555821561138e579182015b8281111561138d578235825591602001919060010190611372565b5b50905061139b9190611425565b5090565b8280546113ab90611aa4565b90600052602060002090601f0160209004810192826113cd5760008555611414565b82601f106113e657805160ff1916838001178555611414565b82800160010185558215611414579182015b828111156114135782518255916020019190600101906113f8565b5b5090506114219190611425565b5090565b5b8082111561143e576000816000905550600101611426565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114778261144c565b9050919050565b6114878161146c565b811461149257600080fd5b50565b6000813590506114a48161147e565b92915050565b6000819050919050565b6114bd816114aa565b81146114c857600080fd5b50565b6000813590506114da816114b4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611505576115046114e0565b5b8235905067ffffffffffffffff811115611522576115216114e5565b5b60208301915083600182028301111561153e5761153d6114ea565b5b9250929050565b6000806000806060858703121561155f5761155e611442565b5b600061156d87828801611495565b945050602061157e878288016114cb565b935050604085013567ffffffffffffffff81111561159f5761159e611447565b5b6115ab878288016114ef565b925092505092959194509250565b6000806000604084860312156115d2576115d1611442565b5b60006115e0868287016114cb565b935050602084013567ffffffffffffffff81111561160157611600611447565b5b61160d868287016114ef565b92509250509250925092565b60006020828403121561162f5761162e611442565b5b600061163d84828501611495565b91505092915050565b60008115159050919050565b61165b81611646565b82525050565b61166a816114aa565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116aa57808201518184015260208101905061168f565b838111156116b9576000848401525b50505050565b6000601f19601f8301169050919050565b60006116db82611670565b6116e5818561167b565b93506116f581856020860161168c565b6116fe816116bf565b840191505092915050565b600060808201905061171e6000830187611652565b61172b6020830186611661565b6117386040830185611661565b818103606083015261174a81846116d0565b905095945050505050565b6000806000806060858703121561176f5761176e611442565b5b600085013567ffffffffffffffff81111561178d5761178c611447565b5b611799878288016114ef565b945094505060206117ac87828801611495565b92505060406117bd878288016114cb565b91505092959194509250565b6000806000606084860312156117e2576117e1611442565b5b60006117f086828701611495565b935050602061180186828701611495565b9250506040611812868287016114cb565b9150509250925092565b600060a082019050818103600083015261183681886116d0565b9050818103602083015261184a81876116d0565b90506118596040830186611652565b6118666060830185611661565b6118736080830184611661565b9695505050505050565b6118868161146c565b82525050565b60006040820190506118a1600083018561187d565b6118ae6020830184611661565b9392505050565b6118be81611646565b81146118c957600080fd5b50565b6000815190506118db816118b5565b92915050565b6000602082840312156118f7576118f6611442565b5b6000611905848285016118cc565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b82818337600083830152505050565b6000611958838561167b565b935061196583858461193d565b61196e836116bf565b840190509392505050565b600060608201905061198e6000830187611661565b61199b6020830186611661565b81810360408301526119ae81848661194c565b905095945050505050565b60006060820190506119ce600083018661187d565b6119db602083018561187d565b6119e86040830184611661565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a2a826114aa565b9150611a35836114aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a6a57611a696119f0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611abc57607f821691505b60208210811415611ad057611acf611a75565b5b50919050565b6000604082019050611aeb600083018561187d565b611af8602083018461187d565b9392505050565b600081519050611b0e816114b4565b92915050565b600060208284031215611b2a57611b29611442565b5b6000611b3884828501611aff565b91505092915050565b6000611b4c826114aa565b9150611b57836114aa565b925082821015611b6a57611b696119f0565b5b82820390509291505056fea2646970667358221220beba888e61e47fe222db6cda263e7e7b90730479c500f38715328600c848a6d164736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 835,
        "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
        "label": "answererToSettings",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(AnswererSettings)819_storage)"
      },
      {
        "astId": 843,
        "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
        "label": "questionerToAnswererToQAs",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(QuestionAnswerDetails)830_storage)dyn_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(QuestionAnswerDetails)830_storage)dyn_storage": {
        "base": "t_struct(QuestionAnswerDetails)830_storage",
        "encoding": "dynamic_array",
        "label": "struct QuestionAndAnswer.QuestionAnswerDetails[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(QuestionAnswerDetails)830_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct QuestionAndAnswer.QuestionAnswerDetails[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(QuestionAnswerDetails)830_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(QuestionAnswerDetails)830_storage)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct QuestionAndAnswer.QuestionAnswerDetails[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_array(t_struct(QuestionAnswerDetails)830_storage)dyn_storage)"
      },
      "t_mapping(t_address,t_struct(AnswererSettings)819_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct QuestionAndAnswer.AnswererSettings)",
        "numberOfBytes": "32",
        "value": "t_struct(AnswererSettings)819_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AnswererSettings)819_storage": {
        "encoding": "inplace",
        "label": "struct QuestionAndAnswer.AnswererSettings",
        "members": [
          {
            "astId": 812,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "populated",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 814,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "priceMinimum",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 816,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "withdrawableAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 818,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "interests",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(QuestionAnswerDetails)830_storage": {
        "encoding": "inplace",
        "label": "struct QuestionAndAnswer.QuestionAnswerDetails",
        "members": [
          {
            "astId": 821,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "question",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 823,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "answer",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 825,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "answered",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 827,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "bounty",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 829,
            "contract": "contracts/QuestionAndAnswer.sol:QuestionAndAnswer",
            "label": "id",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}